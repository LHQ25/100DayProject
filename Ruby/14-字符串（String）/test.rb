#!/usr/bin/ruby -w
# -*- coding: UTF-8 -*-


# ------------------------------------------------------------
# Ruby 中的 String 对象用于存储或操作一个或多个字节的序列。
# Ruby 字符串分为单引号字符串（'）和双引号字符串（"），区别在于双引号字符串能够支持更多的转义字符

# ------------------------------------------------------------
# 单引号字符串
# 最简单的字符串是单引号字符串，即在单引号内存放字符串：
str1='这是一个 Ruby 程序的字符串';
# 需要在单引号字符串内使用单引号字符，那么需要在单引号字符串使用反斜杠(\)，这样 Ruby 解释器就不会认为这个单引号字符是字符串的终止符号
str2='Won\'t you read O\'Reilly\'s book?';

# ------------------------------------------------------------
# 双引号字符串
# 在双引号字符串中我们可以使用 #{} 井号和大括号来计算表达式的值：
# 字符串中嵌入变量：
name1 = "Joe"
name2 = "Mary"
puts "你好 #{name1},  #{name2} 在哪?"

# 进行数学运算
x, y, z = 12, 36, 72
puts "x 的值为 #{ x }"
puts "x + y 的值为 #{ x + y }"
puts "x + y + z 的平均值为 #{ (x + y + z)/3 }"

# ------------------------------------------------------------
# 字符编码
# Ruby 的默认字符集是 ASCII，字符可用单个字节表示。如果您使用 UTF-8 或其他现代的字符集，字符可能是用一个到四个字节表示。
# 您可以在程序开头使用 $KCODE 改变字符集：
# $KCODE = 'u'
=begin
$KCODE 可能的值。
    编码	描述
    a	ASCII （与 none 相同）。这是默认的。
    e	EUC。
    n	None （与 ASCII 相同）。
    u	UTF-8。
=end


# 字符串内建方法
# 我们需要有一个 String 对象的实例来调用 String 方法。下面是创建 String 对象实例的方式
myStr = String.new("THIS IS TEST")
foo = myStr.downcase
 
puts "#{foo}"

# ------------------------------------------------------------
# 字符串的具体各个方法 使用到后自行查询